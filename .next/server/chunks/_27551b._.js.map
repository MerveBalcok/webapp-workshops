{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/prisma/db.ts"],"sourcesContent":["/*\nHier wird verhindert, dass Prisma im dev-Modus von Next immer wieder erzeugt wird und\ndabei immer mehr Verbindungen zur Datenbank entstehen. (Unklar, ob das noch nötig ist,\naber es schadet nicht.)\nhttps://www.prisma.io/docs/orm/more/help-and-troubleshooting/help-articles/nextjs-prisma-client-dev-practices */\n\nimport { PrismaClient } from \"@prisma/client\";\n\nconst prismaClientSingleton = () => {\n  return new PrismaClient();\n};\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var prismaGlobal: undefined | ReturnType<typeof prismaClientSingleton>;\n}\n\nconst prisma = globalThis.prismaGlobal ?? prismaClientSingleton();\n\nexport default prisma;\n\nif (process.env.NODE_ENV !== \"production\") globalThis.prismaGlobal = prisma;\n"],"names":[],"mappings":"AAAA;;;;8GAI8G;;;;;;AAI9G,MAAM,wBAAwB;IAC5B,OAAO,IAAI,uDAAA,CAAA,eAAY;AACzB;AAOA,MAAM,SAAS,WAAW,YAAY,IAAI;uCAE3B;AAEf,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 21, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/app/api/search-workshops/route.ts"],"sourcesContent":["import prisma from \"@/prisma/db\";\nimport { NextResponse } from \"next/server\";\n\nexport async function GET(req: {\n  nextUrl: { searchParams: { searchTerm: string } };\n}) {\n  // Lese den Suchbegriff aus den URL-Parameter\n  const { searchTerm } = req.nextUrl.searchParams;\n\n  // Führe eine Abfrage auf der \"workshop\"-Tabelle durch\n  const workshops = await prisma.workshop.findMany({\n    where: {\n      title: {\n        contains: searchTerm, // Suche nach Workshops, deren Titel den Suchbegriff enthält\n        mode: \"insensitive\", // Suchvorgang ist nicht case-sensitiv\n      },\n    },\n    orderBy: { date: \"desc\" }, // Sortiere die Workshops nach Datum in absteigender Reihenfolge\n    include: { Verein: true }, // Füge die zugehörigen Vereinsdaten zu jedem Workshop hinzu\n  });\n\n  // Gib die gefundenen Workshops als JSON-Antwort zurück\n  return NextResponse.json({ workshops });\n}\n"],"names":[],"mappings":";;;;;;;;AAGO,eAAe,IAAI,GAEzB;IACC,6CAA6C;IAC7C,MAAM,EAAE,UAAU,EAAE,GAAG,IAAI,OAAO,CAAC,YAAY;IAE/C,sDAAsD;IACtD,MAAM,YAAY,MAAM,8GAAA,CAAA,UAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;QAC/C,OAAO;YACL,OAAO;gBACL,UAAU;gBACV,MAAM;YACR;QACF;QACA,SAAS;YAAE,MAAM;QAAO;QACxB,SAAS;YAAE,QAAQ;QAAK;IAC1B;IAEA,uDAAuD;IACvD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;QAAE;IAAU;AACvC"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}